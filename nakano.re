= 技術書典１０に参加して（中野裕）
@<i>{〜　「Jupyter BookでAIの解説本を書く方法」の著者への妄想インタビュー　〜}
//blankline
@<i>{これから記載するインタビュアーと著者との会話は、著者自身がインタビューを受けたことを妄想しながら頭の中で行った仮想のインタビューです。なお、著者の回答として記載した内容は妄想ではなく真実です。}
//blankline
//blankline
//blankline
//noindent
@<b>{-　それでは、「Jupyter BookでAIの解説本を書く方法」の著者である中野 裕さんに執筆期間のお話を伺っていきたいと思います。よろしくお願いします。}
//blankline
//noindent
よろしくお願いします。
//blankline
//noindent
@<b>{-　まず、今回の技術書典１０で本を書こうと思ったきっかけなどはありましたか。}
//blankline
//noindent
たしか9月のZENKEI AI FORUMだったと思います。その回は市來さんと古川さんが技術書典９での体験談をお話されていました。その中でJupyter Bookの話題が出たのですが、本当に軽い気持ちで「使ってみたいな」とYouTubeのライブ配信側のチャットでコメントしたところ、そのあとすぐに市來さんから本を書いてみましょう！とお誘いいただきました。一瞬「あ、しまっ・・」と思いましたが、最近ZENKEI AI FORUMでも特に発表者として参加できていなかったので、いい機会だなと思い直し、やってみようと決めました。
//blankline
//noindent
@<b>{-　なるほど、流れに流されてみるのもいいものですよね。技術書典10は12月下旬から1月上旬でしたが、いつ頃から作業を開始したのですか。}
//blankline
//noindent
やると決めたすぐ後から着手しました。個人的なことですが、子供が生まれたばかりで、仕事以外のほとんど時間が育児という毎日でしたので、少しずつでも書いていかないと間に合わないという思いがありました。寝る前の1時間や朝活として1時間早く起きてやったり。朝活は見事に三日坊主でしたが・・・。私はどちらかというと夏休みの宿題をギリギリまで取っておくタイプでしたので、約3ヶ月間少しずつでもコンスタントに作業できたことは自分でも驚いています。
//blankline
//noindent
@<b>{-　最初から書く内容は固まっていましたか。}
//blankline
//noindent
いいえ、ゴールは全く見えていませんでした。なんといってもJupyter Book自体使ったことがなかったので。とりあえず、Jupyter Bookの公式サイトを読み込むことから始めました。本の中でも何度か触れていますが、Jupyter BookはWEBコンテンツとしての機能が豊富で、アウトプットとしてはHTML形式が適していたのですが、技術書典の出展の形式がPDFやEPUBといったものだったので、Jupyter Bookからの出力としてPDFを採用すべきか悩みました。結果的にはPDF形式で出力し、どの程度書籍としての表現ができるかを試してみようと思いました。
//blankline
//noindent
@<b>{-　本のタイトルは「Jupyter BookでAIの解説本を書く方法」ですが、それはどのように決まったのですか。}
//blankline
//noindent
Jupyter BookはAIのためのツールではありません。ただ、Jupyter BookはJupyter notebookをページの素材として扱うことができ、Jupyter notebookは今までのAIの勉強で溜まったものがあったので、そのAIの勉強用に作成したnotebookを活用してJupyter Bookで本のようなクオリティの出力に仕上げようと思いました。サークルもZENKEI AI FORUMだったので、AIの内容を入れたかったところもあります。内容がタイトルに負けていないかなと度々心配になりました・・・。
//blankline
//noindent
@<b>{-　この本でAIを解説するのではなく、AIを題材とした本を書くためのツールとしてJupyter Bookを紹介しているということですね。}
//blankline
//noindent
はい、そうです。
//blankline
//noindent
@<b>{-　今回、本書を価格500円で販売されていましたが、価格の決め方みたいなものはありましたか。}
//blankline
//noindent
書き始めた頃は無料で配布しようと思っていました。有料にする場合の最低価格は500円と決まっていて、500円の価値があるかと考えた時に自信がなかったこともあります。しかし、考えようによっては最近のちょっとしたデザートでも500円くらいしますし、執筆に費やした時間もそれなりにかかったので、価格設定として500円は妥当かとも思うようになりました。最終的には市來さんに背中を押していただき、有料500円と決めました。実際、イベント開催中に購入されましたと聞くたびに、購入者の期待に答えられているだろうかという不安が増大していきました。有料にしたことによってページ数も気になり、フォントサイズを大きくしてページ数を増やしたりもしました。Jupyter BookからPDFで出力すると書籍としては文字が小さいので、フォントサイズを大きくすることで「本らしさ」が出たようにも思います。最終的に43ページになりました。
//blankline
//noindent
@<b>{-　価格の設定は難しいですよね。ただ、有料にすることで得られた経験もあったということですね。}
//blankline
//noindent
何事も経験ですかね。
//blankline
//noindent
@<b>{-　今回、このJupyter Bookを題材とした本を書くに当たって、自分の中であるルールを定めていたと聞きましたが。}
//blankline
//noindent
はい。当然と思われるかもしれませんが、本のネタを集めるにあたり、Jupyter Bookとその周辺の必要な技術の情報源としてはそれぞれの公式サイト以外は見ないというルールを自分に課しました。
//blankline
//noindent
@<b>{-　それはどのような意図があったのでしょう。}
//blankline
//noindent
私の本業はシステムエンジニアですが、技術的な情報を得る方法としてよくQiitaなどの技術紹介のサイトを見ます。知りたいと思ったことが見つからないことがないくらい、必ず誰かが技術を紹介してくれています。今回のJupyter Bookに関しても探せば面白い情報が見つかるとは思いますが、本を書くことは自分が情報の発信者になるということですので、自分の言葉だけで書き上げなければという思いがありました。
//blankline
//noindent
@<b>{-　では、本の内容について紹介をお願いできますか。}
//blankline
//noindent
本書はPythonで書かれた一つのDeep Learningのプログラムコードから始まります。CIFAR-10の画像分類をKerasを使って実装した短くてとてもシンプルなコードです。実際に動かして結果を得るだけであればこのプログラムで十分ですが、プログラムの解説を行ったり、学生や研究者の論文、会社では成果報告などプログラムだけでは十分ではなく説明を加える必要があるでしょう。そのような場面を想定して、純粋なプログラムをドキュメント（読み物）に変化させていきます。ドキュメントの品質を向上させるためのツールとして、Jupyter notebook、markdown、そしてJupyter Bookを紹介しています。
それらのツールを使うためには、様々なソフトウェアのインストールやライブラリの取得が必要ですが、本書を読んで試してみようとする方が環境構築で躓いてやる気をなくしてしまうことがないように、丁寧に書くように心がけました。
その純粋なDeep Learningのプログラムに説明文や数式、グラフを付けていきますが、「こういう風に説明を書いていくんだよ」という飾りの説明文ではなく、ZENKEI AI FORUMらしくAIのプログラム自体に関しても理解してもらえるように正確に書きました。そして、最後の章では見た目をよくするためにJupyter Bookの活用の仕方を紹介しているといった流れになります。
//blankline
//noindent
@<b>{-　いろんな要素が詰まった本だったんですね。}
//blankline
//noindent
一つのテーマで仕上げるには知識が足りなかったというだけかもしれません。私の今までの経験をパッチワークのように繋ぎ合わせてようやくそれなりのボリュームが出せたというのが正直なところです。
//blankline
//noindent
@<b>{-　実際にJupyter Bookを使ってみて率直にどうでしたか。}
//blankline
//noindent
普段Jupyter notebookで研究結果や調査結果をまとめている人にとっては、それらをWEBページとして公開する目的においては非常に便利で簡単なツールだと思います。自動的に目次（ナビゲーション）も付けてくれますし、Jupyter notebookの実行結果としての画像やグラフもWEBページ上にそのまま表示させることができます。さらに、そのWEBページ内にインタラクティブな要素も持たせることができるので、表現の幅もJuypter notebookより広がります。
一方で、今回のPDF形式での出力においてはWEBページで効果的なインタラクティブな効果をつけることができないこともあり、Jupyter Bookの良さを十分に発揮させることができないと感じました。
//blankline
//noindent
@<b>{-　では、Jupyter BookでのPDF形式での出力を上手に仕上げることが本のテーマだったと思いますが、内容をまとめるのに苦労されたということでしょうか。}
//blankline
//noindent
そうですね、苦労は多かったと思います。まず、最初にPDF形式で出力させてみたところ、日本語が中華フォントになってしまいPDFでの出力を諦めかけました。結果的には、Jupyter Bookのバージョンが上がったのかこの問題はいつの間にか解決していました。
次に、WEBページでは目次（ナビゲーション）はとても便利でしたが、PDFでは機能しないため取り除きたかったのですが、取り除くための方法がなかなか見つかりませんでした。一時はPDFを直接編集して取り除けないかということも考えましたが、Jupyter Bookの仕組み（CSSを追加する方法）で取り除くことができることがわかりました。この辺りで徐々にPDF形式でいけるというイメージを持ち始めてきました。
最後に、取り除いた目次部分がページの余白として不自然に残ってしまっていてバランスの悪いレイアウトになっていましたが、その余白を注釈用のスペースとして活用することで、全体的なバランスがよくなりました。この注釈をつける機能もJupyter Bookから提供されているもので、PDF形式での出力結果に「本らしさ」を加えてくれます。
このように試行錯誤を繰り返し、さらに運にも恵まれて完成まで持っていくことができました。
//blankline
//noindent
@<b>{-　Jupyter Bookでオススメの機能はありますか。}
//blankline
//noindent
やはり「タグ」の機能ですね。タグはJupyter notebookのコードセル（Pythonでプログラムを書く部分）の実行結果をJupyter Bookの出力としてどう表現するかを指示するものです。例えば、Jupyter notebookでプログラムの実行結果をグラフとして出力する場合、matplotllibを使ってグラフ描画用のプログラムをコードセルに記載します。ただ、このプログラムはユーザにグラフを見せるためのものであって、プログラムそのものをユーザに見せる必要はありません。グラフだけ見えればいいのです。こういった時に、プログラムの実行結果（グラフなど）だけを表示させて、プログラム部分は見せないということがタグという機能で実現できます。
//blankline
//noindent
@<b>{-　なるほど、Jupyter notebookに記載された内容を全てBookとして表示するのではなく、必要な部分だけを表示するように制御できるということですね。}
//blankline
//noindent
はい。技術的なことではありませんが、もう一つ面白かったことがあります。Jupyter Bookは現時点ではβ版であり今後も改良されることが期待されますが、改良のリクエストをユーザから募り、他のユーザからも同意を得られたものがランクアップしていく仕組みが興味深かったです。予め投稿されていた要望に共感するものがあれば「いいね」と同意すれば要望が製品に反映される可能性が高まります。また、他のユーザの要望を見ることで、自分以外のユーザがどういうことを気にしているかがわかります。①多くのユーザの声を集めることができる ②ユーザ自身が要望を分類してくれる ③ユーザ同士の情報共有の場にもなる。シンプルだけどメリットがたくさんある良い仕組みだと思いました。
//blankline
//noindent
@<b>{-　ツール自体だけでなく、その開発プロセスにも面白さがあったということですね。それでは最後に今後の活動について聞かせていただけますか。}
//blankline
//noindent
技術書典１０ではPDFのみの販売としましたが、もう少しレイアウトに「本らしさ」を加えられたら物理本として出してみたいです。ただし、Jupyter Bookの機能によって実現すべきことですので、今後のJupyter Bookの改良にも注目していきたいと思います。

